let not = { fn (x: Bool) -> if x: ret false else: ret true },
    and = { fn (x: Bool, y: Bool) -> if x: ret y else: ret false },
    or = { fn (x: Bool, y: Bool) -> if x: ret true else: ret y };
do a <- !and false true,
   b <- !or false true,
   c <- !not a;
!and c b
@@@ boolean operations

let nor = { fn (x: Bool, y: Bool) -> if x: if y: ret true else: ret false else: ret false };
do a <- !nor false false;
!nor a a
@@@ boolean operations but better