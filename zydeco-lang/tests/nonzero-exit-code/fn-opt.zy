codata Fn A : VType where
  | .arg(A): F(A)
end

codata FnOpt A : VType where
  | .one(A): F(A)
  | .zero(): F(A)
end

let fn_int : Thunk(Fn Int) = {
  comatch
  | .arg(i) -> ret i
  end
};

let fn_opt_int : Thunk(FnOpt Int) = {
  comatch
  | .one(i) -> ! fn_int .arg(i)
  | .zero() -> ! fn_int .arg(0)
  end
};

do x <- ! fn_opt_int .zero();
! exit x