let map1 = {
  rec (map: U(U(Int -> F(Int))
    -> ListInt -> F(ListInt))) ->
    fn (f: U(Int -> F(Int))) ->
      fn (l: ListInt) ->
        match l
          | Nil() -> ret Nil()
          | Cons(x, xs) ->
            ( do x <- ! f x;
              do xs <- ! map f xs;
              ret Cons(x, xs) )
};
! map1 f l
